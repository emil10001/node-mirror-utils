/**
 * Created by ejf3 on 10/18/14.
 */

SubscriptionUtils = function () {
    var self = this;
    var subscription = {};

    /**
     * The collection to subscribe to. Allowed values are: 'timeline', 'locations', and 'settings'
     * @param collection
     * @returns {SubscriptionUtils}
     */
    this.collection = function (collection) {
        if (collection !== "timeline"
            && collection !== "locations"
            && collection !== "settings") {
            console.log("ERROR - invalid collection type, supported types are: 'timeline', 'locations', or 'settings'");
        }

        subscription["collection"] = collection;
        return self;
    };

    /**
     * The URL where notifications should be delivered (must start with https://).
     * @param callbackUrl
     * @returns {SubscriptionUtils}
     */
    this.callbackUrl = function (callbackUrl) {
        subscription["callbackUrl"] = callbackUrl;
        return self;
    };

    /**
     * An opaque token sent to the subscriber in notifications so that it can determine the ID of the user.
     * @param userToken
     * @returns {SubscriptionUtils}
     */
    this.userToken = function (userToken) {
        subscription["userToken"] = userToken;
        return self;
    };

    /**
     * A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google.
     * @param verifyToken
     * @returns {SubscriptionUtils}
     */
    this.verifyToken = function (verifyToken) {
        subscription["verifyToken"] = verifyToken;
        return self;
    };

    /**
     * A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are:
     * @param operation
     * @returns {SubscriptionUtils}
     */
    this.operation = function (operation) {
        subscription["operation"] = operation;
        return self;
    };

    /**
     * Builds and returns the subscription. If the subscription is invalid, it will print an error.
     * @returns {{}}
     */
    this.build = function(){
        if (!!!(subscription.collection) || !!!(subscription.callbackUrl))
            console.log("ERROR - collection and callbackUrl are required fields");

        var resource = {};
        for (var key in subscription)
            resource[key] = subscription[key];

        return {
            resource: resource
        };

    }

};

module.exports = SubscriptionUtils;
